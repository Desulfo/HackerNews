{"version":3,"sources":["molecules/News.js","organisms/NewsContainer.js","App.js","index.js"],"names":["News","news","newsData","Date","time","authorsURL","by","useState","karma","setKarma","useEffect","fetch","then","response","json","data","href","className","toDateString","title","score","topStoriesAPI","newsAPI","id","fetchData","endpoint","a","result","getRandomIds","idArray","maxNumber","max","randomIds","randomIndexNumbers","i","randomNumber","Math","floor","random","includes","push","forEach","number","NewsContainer","stories","setStories","isLoading","setLoading","storiesId","idLength","length","Promise","all","map","ID","getRandomStories","console","log","sort","fistStory","secondStory","story","key","App","ReactDOM","render","document","getElementById"],"mappings":"4OAgCeA,MA9Bf,YAAyB,IAATC,EAAQ,EAARA,KACRC,EAAW,IAAIC,KAAKF,EAAKG,MACzBC,EAAU,qDAAiDJ,EAAKK,GAAtD,SAFM,EAGEC,mBAAS,MAHX,mBAGjBC,EAHiB,KAGVC,EAHU,KAWtB,OAPAC,qBAAU,WACRC,MAAMN,GACHO,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLN,EAASM,EAAKP,YAEjB,IAED,uBAAGQ,KAAK,KACN,6BAASC,UAAU,QACjB,4BAAQA,UAAU,gBAChB,iCACE,4BAAKhB,EAAKK,IAAS,IACnB,2BACE,yCADF,IACyBE,IAEhB,IACX,8BAAON,EAASgB,iBAElB,4BAAKjB,EAAKkB,OACV,sCAAQlB,EAAKmB,MAAb,eCtBFC,EAAa,qEACbC,EAAU,SAACC,GAAD,2DAAsDA,EAAtD,UAGVC,EAAS,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACKf,MAAMc,GAAUb,MAAK,SAACC,GAAD,OAAcA,EAASC,UADjD,cACVa,EADU,yBAETA,GAFS,2CAAH,sDAITC,EAAe,SAACC,EAASC,GAG7B,IAFA,IANuBC,EAMjBC,EAAY,GACZC,EAAqB,GAClBC,EAAI,EAAGA,EAAI,IAAM,CACxB,IAAMC,GATeJ,EASgBD,EATRM,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMN,KAU9DE,EAAmBM,SAASJ,KAC/BF,EAAmBO,KAAKL,GACxBD,KAMJ,OAHAD,EAAmBQ,SAAQ,SAACC,GAC1BV,EAAUQ,KAAKX,EAAQa,OAElBV,GAiDMW,MAnCf,WAAyB,MAEOpC,mBAAS,IAFhB,mBAEhBqC,EAFgB,KAEPC,EAFO,OAGStC,oBAAS,GAHlB,mBAGhBuC,EAHgB,KAGLC,EAHK,KAqBvB,OAfArC,qBAAU,WAAM,4CACd,kCAAAgB,EAAA,6DACEqB,GAAW,GADb,SAEwBvB,EAAUH,GAFlC,cAEM2B,EAFN,OAGMC,EAAWD,EAAUE,OACrBlB,EAAYJ,EAAaoB,EAAWC,GAJ1C,SAKyBE,QAAQC,IAC7BpB,EAAUqB,KAAI,SAACC,GAAD,OAAQ9B,EAAUF,EAAQgC,QAN5C,OAKQzC,EALR,OAQEgC,EAAWhC,GACXkC,GAAW,GATb,6CADc,uBAAC,WAAD,wBAYdQ,KACC,IAGD,0BAAMtC,UAAU,WACbuC,QAAQC,IAAIb,EAASE,GACrBA,EACC,yCAEAF,EACGc,MAAK,SAACC,EAAWC,GAAZ,OAA4BA,EAAYxC,MAAQuC,EAAUvC,SAC/DiC,KAAI,SAACQ,GAAD,OAAW,kBAAC,EAAD,CAAM5D,KAAM4D,EAAOC,IAAKD,EAAMtC,UCtDzCwC,MATf,WACE,OACE,yBAAK9C,UAAU,OACb,iDACA,kBAAC,EAAD,QCJN+C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.98a43303.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction News({ news }) {\r\n  const newsData = new Date(news.time);\r\n  const authorsURL = `https://hacker-news.firebaseio.com/v0/user/${news.by}.json`;\r\n  let [karma, setKarma] = useState(null);\r\n  useEffect(() => {\r\n    fetch(authorsURL)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setKarma(data.karma);\r\n      });\r\n  }, []);\r\n  return (\r\n    <a href=\"#\">\r\n      <article className=\"News\">\r\n        <header className=\"News__header\">\r\n          <section>\r\n            <h3>{news.by}</h3>{' '}\r\n            <p>\r\n              <small>karma:</small> {karma}\r\n            </p>\r\n          </section>{' '}\r\n          <data>{newsData.toDateString()}</data>\r\n        </header>\r\n        <h2>{news.title}</h2>\r\n        <h3>{`${news.score} âœ©`}</h3>\r\n      </article>\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default News;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport News from '../molecules/News';\r\n\r\nconst topStoriesAPI = `https://hacker-news.firebaseio.com/v0/topstories.json?print=pretty`;\r\nconst newsAPI = (id) => `https://hacker-news.firebaseio.com/v0/item/${id}.json`;\r\n\r\nconst getRandomNumber = (max) => Math.floor(Math.random() * Math.floor(max));\r\nconst fetchData = async (endpoint) => {\r\n  const result = await fetch(endpoint).then((response) => response.json());\r\n  return result;\r\n};\r\nconst getRandomIds = (idArray, maxNumber) => {\r\n  const randomIds = [];\r\n  const randomIndexNumbers = [];\r\n  for (let i = 0; i < 10; ) {\r\n    const randomNumber = getRandomNumber(maxNumber);\r\n    if (!randomIndexNumbers.includes(randomNumber)) {\r\n      randomIndexNumbers.push(randomNumber);\r\n      i++;\r\n    }\r\n  }\r\n  randomIndexNumbers.forEach((number) => {\r\n    randomIds.push(idArray[number]);\r\n  });\r\n  return randomIds;\r\n};\r\nconst randomStory = {\r\n  by: 'DyslexicAtheist',\r\n  descendants: 5,\r\n  id: 24929190,\r\n  kids: (2)[(24930220, 24929715)],\r\n  score: 15,\r\n  time: 1603969526,\r\n  title: 'Internal Google document reveals campaign against EU lawmakers',\r\n  type: 'story',\r\n  url: 'https://www.ft.com/content/d9d05b1e-45c0-44b8-a1ba-3aa6d0561bed',\r\n};\r\n//COMPONENT\r\nfunction NewsContainer() {\r\n  //let [error, setError] = useState(null);\r\n  const [stories, setStories] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  //USE EFFECT\r\n  useEffect(() => {\r\n    async function getRandomStories() {\r\n      setLoading(true);\r\n      let storiesId = await fetchData(topStoriesAPI);\r\n      let idLength = storiesId.length;\r\n      let randomIds = getRandomIds(storiesId, idLength);\r\n      const response = await Promise.all(\r\n        randomIds.map((ID) => fetchData(newsAPI(ID)))\r\n      );\r\n      setStories(response);\r\n      setLoading(false);\r\n    }\r\n    getRandomStories();\r\n  }, []);\r\n  //RENDERING\r\n  return (\r\n    <main className=\"topNews\">\r\n      {console.log(stories, isLoading)}\r\n      {isLoading ? (\r\n        <p>loading...</p>\r\n      ) : (\r\n        stories\r\n          .sort((fistStory, secondStory) => secondStory.score - fistStory.score)\r\n          .map((story) => <News news={story} key={story.id} />)\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default NewsContainer;\r\n","import React from 'react';\n\nimport './App.css';\nimport NewsContainer from './organisms/NewsContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Top Hacker's News</h1>\n      <NewsContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}